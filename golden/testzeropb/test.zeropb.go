// Code generated by protoc-gen-zeropb. DO NOT EDIT.

package testzeropb

import "github.com/danhhz/zeropb"

type TestMessage struct {
  buf []byte
  offsets zeropb.FastIntMap
}

func (m *TestMessage) Decode(buf []byte) error{
  m.buf = buf
  return zeropb.Decode(m.buf, &m.offsets)
}

func (m *TestMessage) Uint64() uint64 {
  return zeropb.GetUint64(m.buf, &m.offsets, 5)
}

func (m *TestMessage) ByteArray() []byte {
  return zeropb.GetBytes(m.buf, &m.offsets, 15)
}

func (m *TestMessage) Enum() uint32 {
  return zeropb.GetUint32(m.buf, &m.offsets, 16)
}

func (m *TestMessage) Message(x *TestMessage) (bool, error) {
  buf := zeropb.GetBytes(m.buf, &m.offsets, 17)
  if buf == nil {
    return false, nil
  }
  return true, x.Decode(buf)
}

type TestMessageTestMessageIterator []byte

func (i *TestMessageTestMessageIterator) Next(m *TestMessage) (bool, error) {
  var buf []byte
  *i, buf = zeropb.FindNextField((*i), 34)
  if buf == nil {
    return false, nil
  }
  return true, m.Decode(buf)
}

func (m *TestMessage) Messages() TestMessageTestMessageIterator {
  return TestMessageTestMessageIterator(zeropb.GetRepeatedMessage(m.buf, &m.offsets, 34))
}

